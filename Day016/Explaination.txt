                                                                          ****EXPLAINATION****
                                                             Java Program to Check Armstrong Number

In this program, we will learn to check whether a given number is armstrong number or not.
 You'll learn to do this by using a for loop and a while loop in Java.

To understand this example, you should have the knowledge of the following Java programming topics:
Java while and do...while Loop
Java if...else Statement
Java for Loop

A positive integer is called an Armstrong number of order n if
abcd... = an + bn + cn + dn + ...
In case of an Armstrong number of 3 digits, the sum of cubes of each digits is equal to the number itself.
 For example:
153 = 1*1*1 + 5*5*5 + 3*3*3  // 153 is an Armstrong number.

Example 1: Checking Armstrong Number for 3 digit number
First, given number (number)'s value is stored in another integer variable, originalNumber.
 This is because, we need to compare the values of final number and original number at the end.
Then, a while loop is used to loop through originalNumber until it is equal to 0.
On each iteration, the last digit of num is stored in remainder.
Then, remainder is powered by 3 (number of digits) using Math.pow() function and added to result.
Then, the last digit is removed from originalNumber after division by 10.
Finally, result and number are compared. If equal, it is an Armstrong number. If not, it isn't.
--------------------------------------------------------------------------------------------------------------------------------------------
Example 2: Checking Armstrong number for n digits
In this program, instead of using while loop, we've used two for loops.
The first for loop is used to count the number of digits in the number. It is the condensed form of:
for (;originalNumber != 0; originalNumber /= 10) {
     n++;
}
The second for loop then calculates the result where on each iteration, the remainder is powered by the number of digits n.
