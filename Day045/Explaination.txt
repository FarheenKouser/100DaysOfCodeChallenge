                                                        ****EXPLAINATION****
                  Java Program to Get the middle element of LinkedList in a single iteration

In this example, we will learn to get the middle element of the linked list in a single iteration in Java.

To understand this example, make sure you first visit the following tutorials,

Java LinkedList Class-The LinkedList class of the Java collections framework provides the 
                                           functionality of the linked list data structure (doubly linkedlist).
                  A single node of doubly linkedlist that has 3 fields Prev, Data, and Next.
                       Prev - stores an address of the previous element in the list. It is null for the first element
                       Next - stores an address of the next element in the list. It is null for the last elemen
                      Data - stores the actual data

LinkedList Data Structure-It is a linear data structure that includes a series of connected nodes.
                                                Here, each node stores the data and the address of the next node. 
                    You have to start somewhere, so we give the address of the first node a special name
                    called HEAD. Also, the last node in the linked list can be identified because 
                    its next portion points to NULL.
            Linked lists can be of multiple types: 
                   singly, doubly, and circular linked list.

Example 1: Get the middle element of LinkedList in a single search
 
 In the above example, we have implemented the linked list data structure in Java.
 We then find the middle element of the linked list in a single loop. Notice the code,

    while (ptr1.next != null) {

      // increase the ptr1 by 2 and ptr2 by 1
      // if ptr1 points to last element
      // ptr2 will points to middle element
      ptr1 = ptr1.next;
      if(ptr1.next !=null) {
        ptr1 = ptr1.next;
        ptr2 = ptr2.next;
      }
    }
Here, we have two variables ptr1 and ptr2.
 We use these variables to iterate through the linked list.

In each iteration, the ptr1 will access the two nodes and 
the ptr2 will access the single node of the linked list.

Now, when the ptr1 reaches the end of the linked list, the ptr2 will be in the middle.
 In this way, we are able to get the middle of linked list in a single iteration.
------------------------------------------------------------------------------------------------------------------------------
Example 2: Get the middle element of LinkedList using the LinkedList class

In this example, we have used the LinkedList class to implement the linked list data structure.
 Notice the expression,
animals.get(animals.size()/2)
size()/2 - returns the position of middle element
get() - returns the element at the middle position